/**
 * Definition of linked list:
 *
 * class Node {
 * public:
 *      int data;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next) {
 *          this->data = data;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node *addTwoNumbers(Node *num1, Node *num2)
{
   Node *head = new Node(-1);
   Node *temp = head;
   int carry=0;
   while(num1 || num2)
   {
       int sum = (num1!=NULL?num1->data:0) + (num2!=NULL?num2->data:0) + carry;
       carry = sum/10;
       sum = sum%10;
       Node *t =new Node(sum);
       head->next=t;
       head=t;
       num1 = num1?num1->next:num1;
       num2 = num2?num2->next:num2;
   }
   if(carry)
   {
       Node *t =new Node(carry);
       head->next=t;
       head=t; 
       carry=carry/10;
   }
   return temp->next;
}


//    while(num1)
//    {
//        int sum = num1->data + carry;
//        carry = sum/10;
//        sum = sum%10;
//        Node *t =new Node(sum);
//        head->next=t;
//        head=t;
//        num1=num1->next;
//    }
//    while(num2){
//        int sum = num2->data + carry;
//        carry = sum/10;
//        sum = sum%10;
//        Node *t =new Node(sum);
//        head->next=t;
//        head=t;
//        num2=num2->next;
//    }