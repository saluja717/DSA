#include <bits/stdc++.h> 

int merge(vector<int>&arr,int i,int mid,int j)
{
     int n = j-i+1;
	 int temp[n];
	 int i1=i;
	 int j1=mid+1;
	 int count=0,t=0;

     while(i1<=mid && j1<=j)
	 {
		 if(arr[i1]>2*arr[j1]){
			 count = count + (mid-i1+1);
			 j1++;
		 }
		 else{
            i1++;
		 }
	 }
	 i1=i;
	 j1=mid+1;

	 while(i1<=mid && j1<=j)
	 {
		 if(arr[i1]>arr[j1]){
			 temp[t] = arr[j1];
			 j1++;
		 }else{
			 temp[t] = arr[i1];
			 i1++;
		 }
		 t++;
	 }
	 while(i1<=mid){
		  temp[t++] = arr[i1];
		  i1++;
	 }
	 while(j1<=j){
		  temp[t++] = arr[j1];
		  j1++;
	 }
	  t=0;
	 for(int k=i;k<=j;k++){
		 arr[k]=temp[t++];
	 }
	 //cout<<count<<endl;
	 return count;
}

int merge_sort(vector<int>&arr,int i,int j)
{
	int count=0;
	if(i<j)
	{
		int mid = (i+j)/2;
        count += merge_sort(arr,i,mid);
	    count += merge_sort(arr,mid+1,j);
		count += merge(arr,i,mid,j);
	}
	return count;
}

int reversePairs(vector<int> &arr, int n){
	int c = merge_sort(arr,0,n-1);	
	//for(int i=0;i<n;i++) cout<<arr[i]<<" ";
	//cout<<endl;
	return c;
}