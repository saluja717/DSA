/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

int len(Node *head)
{
    int count=0;
    while(head)
    {
        count++;
        head=head->next;
    }
    return count;
}

Node* reverse(Node *head,int n,Node *r)
{
    if(!head->next)
    {
        return head;
    }
    Node *p=head->next,*q=head;
    while(n--)
    {
        q->next=r;
        r=q;
        q=p;
        p=p->next;
    }
    // q->next=r;
    return r;
}

Node *rotate(Node *head, int k) {
     int n = len(head);
     k=k%n;
     n=n-k;
     int t1 = k;
     Node *temp=head,*prev;
     while(n--)
     {
         prev=temp;
         temp=temp->next;
     }
     prev->next=NULL;
     prev=head;
     Node *check = head;
     while(temp)
     {
        Node *t=temp->next;
        temp->next=prev;
        prev=temp;
        temp=t;
     }
     return reverse(prev,t1,check);
    //  return prev;
}